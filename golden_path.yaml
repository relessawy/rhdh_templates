apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: myfirstemplate
  title: My first Template
  description: Create a simple Quarkus Application
spec:
  owner: service@example.com
  type: service
  parameters:
    - title: Provide Information for Application
      required:
        - component_id
        - java_package_name
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the component
          default: my-first-app
          ui:field: EntityNamePicker
          maxLength: 14
        group_id:
          title: Group Id
          type: string
          default: redhat.janus
          description: Maven Group Id
        artifact_id:
          title: Artifact Id
          type: string
          default: quarkus-app
          description: Maven Artifact Id
        java_package_name:
          title: Java Package Name
          default: org.redhat.janus
          type: string
          description: Name for the java package. eg (com.redhat.blah)
        host:
              title: Repo Host
              type: string
              description: Your SCM host
              default: gitlab-gitlab.apps.cluster-jqxpz.sandbox744.opentlc.com
              enum:
                - gitlab-gitlab.apps.cluster-jqxpz.sandbox744.opentlc.com
        owner:
              title: Repo Owner
              type: string
              description: Your SCM host organization/group
              default: rhdh
              enum:
                - rhdh
        image_registry:
          title: Image Registry
          type: string
          description: Host for storing image
          default: image-registry.openshift-image-registry.svc:5000
  steps:
    - id: log-message
      name: Log Message
      action: debug:log
      input:
        message: "Repo: ${{ parameters.host }}?owner=${{ parameters.owner }}&repo=${{parameters.component_id}}"
    - id: template
      name:  Generate Application Code from Application Manifest
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutRender:
          - .github/workflows/*
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          namespace: ${{ parameters.component_id }}-dev
          group_id: ${{ parameters.group_id }}
          artifact_id: ${{ parameters.artifact_id }}
          java_package_name: ${{ parameters.java_package_name }}
          owner: dev-user
          cluster: .apps.cluster-jqxpz.sandbox744.opentlc.com
          host: ${{ parameters.repo.host }}
          destination: ${{ parameters.repo.owner }}/${{ parameters.component_id }}
          quay_destination: ${{ parameters.image_organization}}/${{ parameters.component_id }}
          port: 8080
    - id: publish
      name: Publish
      action: publish:gitlab
      input:
        repoUrl: "${{ parameters.host }}?owner=${{ parameters.owner }}&repo=${{parameters.component_id}}"
        repoVisibility: public


