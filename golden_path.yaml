apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: myfirstemplate
  title: My first Template
  description: Create a simple Quarkus Application
spec:
  owner: service@example.com
  type: service
  parameters:
    - title: Provide Information for Application
      required:
        - component_id
        - owner
        - java_package_name
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the component
          default: my-first-app
          ui:field: EntityNamePicker
        group_id:
          title: Group Id
          type: string
          default: redhat.janus
          description: Maven Group Id
        artifact_id:
          title: Artifact Id
          type: string
          default: quarkus-app
          description: Maven Artifact Id
        java_package_name:
          title: Java Package Name
          default: org.redhat.janus
          type: string
          description: Name for the java package. eg (com.redhat.blah)
        owner:
          title: Owner
          type: string
          description: IdP owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
    - title: Provide Image Registry Information
      required:
        - image_registry
      properties:
        image_registry:
          title: Image Registry
          type: string
          description: Host for storing image
          default: image-registry.openshift-image-registry.svc:5000
    - title: Application repository Information
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com    
  steps:
    - id: template
      name: Generating Application Code from Application Manifest
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutTemplating:
          - .github/workflows/*
        values:
          component_id: ${{ parameters.component_id }}
          namespace: ${{ parameters.component_id }}-dev
          description: ${{ parameters.description }}
          group_id: ${{ parameters.group_id }}
          artifact_id: ${{ parameters.artifact_id }}
          java_package_name: ${{ parameters.java_package_name }}
          owner: ${{ parameters.owner }}
          cluster: .apps.cluster-xxxxx.xxxxx.sandbox123.opentlc.com
          destination: ${{ (parameters.repoUrl | parseRepoUrl).owner }}/${{ (parameters.repoUrl | parseRepoUrl).repo }}
          quay_destination: ${{ parameters.image_organization }}/${{ parameters.component_id }}
          port: 8080
    - id: publish
      name: Publishing to the Source Code Repository
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: ${{ parameters.description }}
        repoUrl: github.com?owner=${{ parameters.orgName }}&repo=${{ parameters.repoName }}
        defaultBranch: main
